From: Hannes Reinecke <hare@suse.de>
Date: Thu, 21 Jul 2016 10:09:05 +0200
Subject: fcoe: Add FIP responder on the real network device
Patch-Mainline: v4.8-rc1
References: bsc#989133
Git-commit: d242e6680e81cea0343bd93ba862efa70a91a56c

FIP VLAN traffic has to run on the underlying network device,
not the VLAN device.

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 drivers/scsi/fcoe/fcoe.c |   71 ++++++++++++++++++++++++++++++++++++++++++++++-
 drivers/scsi/fcoe/fcoe.h |    2 +
 2 files changed, 72 insertions(+), 1 deletion(-)

--- a/drivers/scsi/fcoe/fcoe.c
+++ b/drivers/scsi/fcoe/fcoe.c
@@ -90,6 +90,8 @@ static void fcoe_dev_cleanup(void);
 static struct fcoe_interface
 *fcoe_hostlist_lookup_port(const struct net_device *);
 
+static int fcoe_fip_vlan_recv(struct sk_buff *, struct net_device *,
+			      struct packet_type *, struct net_device *);
 static int fcoe_fip_recv(struct sk_buff *, struct net_device *,
 			 struct packet_type *, struct net_device *);
 
@@ -363,6 +365,12 @@ static int fcoe_interface_setup(struct f
 	fcoe->fip_packet_type.dev = netdev;
 	dev_add_pack(&fcoe->fip_packet_type);
 
+	if (fcoe->realdev != netdev) {
+		fcoe->fip_vlan_packet_type.func = fcoe_fip_vlan_recv;
+		fcoe->fip_vlan_packet_type.type = htons(ETH_P_FIP);
+		fcoe->fip_vlan_packet_type.dev = fcoe->realdev;
+		dev_add_pack(&fcoe->fip_vlan_packet_type);
+	}
 	return 0;
 }
 
@@ -450,6 +458,8 @@ static void fcoe_interface_remove(struct
 	 */
 	__dev_remove_pack(&fcoe->fcoe_packet_type);
 	__dev_remove_pack(&fcoe->fip_packet_type);
+	if (fcoe->netdev != fcoe->realdev)
+		__dev_remove_pack(&fcoe->fip_vlan_packet_type);
 	synchronize_net();
 
 	/* Delete secondary MAC addresses */
@@ -497,6 +507,51 @@ static void fcoe_interface_cleanup(struc
 }
 
 /**
+ * fcoe_fip_vlan_recv() - Handler for received FIP VLAN frames
+ * @skb:      The receive skb
+ * @netdev:   The associated net device
+ * @ptype:    The packet_type structure which was used to register this handler
+ * @orig_dev: The original net_device the the skb was received on.
+ *	      (in case dev is a bond)
+ *
+ * Returns: 0 for success
+ */
+static int fcoe_fip_vlan_recv(struct sk_buff *skb, struct net_device *netdev,
+			      struct packet_type *ptype,
+			      struct net_device *orig_dev)
+{
+	struct fcoe_interface *fcoe;
+	struct fcoe_ctlr *ctlr;
+	struct fip_header *fiph;
+
+	if (skb_vlan_tagged(skb)) {
+		kfree_skb(skb);
+		return 0;
+	}
+
+	fiph = (struct fip_header *)skb->data;
+	if (FIP_VER_DECAPS(fiph->fip_ver) != FIP_VER ||
+	    ntohs(fiph->fip_op) != FIP_OP_VLAN) {
+		FCOE_NETDEV_DBG(netdev,
+				"skb_info: drop fip vlan op %x/%x\n",
+				ntohs(fiph->fip_op), fiph->fip_subcode);
+		kfree_skb(skb);
+		return 0;
+	}
+
+	fcoe = container_of(ptype, struct fcoe_interface, fip_vlan_packet_type);
+	ctlr = fcoe_to_ctlr(fcoe);
+	if (!ctlr->fip_resp) {
+		FCOE_NETDEV_DBG(netdev,
+				"skb_info: drop fip vlan (responder not active)\n");
+		kfree_skb(skb);
+	} else
+		fcoe_ctlr_recv(ctlr, skb);
+
+	return 0;
+}
+
+/**
  * fcoe_fip_recv() - Handler for received FIP frames
  * @skb:      The receive skb
  * @netdev:   The associated net device
@@ -539,7 +594,21 @@ static void fcoe_port_send(struct fcoe_p
  */
 static void fcoe_fip_send(struct fcoe_ctlr *fip, struct sk_buff *skb)
 {
-	skb->dev = fcoe_from_ctlr(fip)->netdev;
+	struct fcoe_interface *fcoe = fcoe_from_ctlr(fip);
+	struct fip_frame {
+		struct ethhdr eth;
+		struct fip_header fip;
+	} __packed *frame;
+
+	/*
+	 * Use default VLAN for FIP VLAN discovery protocol
+	 */
+	frame = (struct fip_frame *)skb->data;
+	if (frame->fip.fip_op == ntohs(FIP_OP_VLAN) &&
+	    fcoe->realdev != fcoe->netdev)
+		skb->dev = fcoe->realdev;
+	else
+		skb->dev = fcoe->netdev;
 	fcoe_port_send(lport_priv(fip->lp), skb);
 }
 
--- a/drivers/scsi/fcoe/fcoe.h
+++ b/drivers/scsi/fcoe/fcoe.h
@@ -68,6 +68,7 @@ do {
  * @netdev:	      The associated net device
  * @fcoe_packet_type: FCoE packet type
  * @fip_packet_type:  FIP packet type
+ * @fip_vlan_packet_type:  FIP VLAN packet type
  * @oem:	      The offload exchange manager for all local port
  *		      instances associated with this port
  * @removed:	      Indicates fcoe interface removed from net device
@@ -80,6 +81,7 @@ struct fcoe_interface {
 	struct net_device  *realdev;
 	struct packet_type fcoe_packet_type;
 	struct packet_type fip_packet_type;
+	struct packet_type fip_vlan_packet_type;
 	struct fc_exch_mgr *oem;
 	u8	removed;
 	u8	priority;
