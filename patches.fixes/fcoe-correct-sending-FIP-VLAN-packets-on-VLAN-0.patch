From: Hannes Reinecke <hare@suse.de>
Date: Tue, 9 Aug 2016 13:25:44 +0200
Subject: fcoe: correct sending FIP VLAN packets on VLAN 0
Git-commit: f7e6ed0654128979a1939be6640416abb6a54811
Patch-mainline: v4.10-rc1
References: bsc#989133

The FIP VLAN frame consists of an ethernet header followed
by the FIP VLAN frame, so we need to skip the ethernet header
if we want to check the FIP opcode.

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 drivers/scsi/fcoe/fcoe.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/scsi/fcoe/fcoe.c b/drivers/scsi/fcoe/fcoe.c
index d8fe6b4..463a13f 100644
--- a/drivers/scsi/fcoe/fcoe.c
+++ b/drivers/scsi/fcoe/fcoe.c
@@ -602,12 +602,15 @@ static void fcoe_port_send(struct fcoe_port *port, struct sk_buff *skb)
  */
 static void fcoe_fip_send(struct fcoe_ctlr *fip, struct sk_buff *skb)
 {
-	struct fip_header *fiph = (struct fip_header *)skb->data;
-
-	if (ntohs(fiph->fip_op) == FIP_OP_VLAN) {
-		skb->dev = fcoe_from_ctlr(fip)->realdev;
-	} else {
-		skb->dev = fcoe_from_ctlr(fip)->netdev;
+	struct ethhdr *eh = eth_hdr(skb);
+	struct fip_header *fiph = NULL;
+
+	skb->dev = fcoe_from_ctlr(fip)->netdev;
+	if (ntohs(eh->h_proto) == ETH_P_FIP) {
+		fiph = (struct fip_header *)((unsigned char *)eh +
+					     sizeof(struct ethhdr));
+		if (ntohs(fiph->fip_op) == FIP_OP_VLAN)
+			skb->dev = fcoe_from_ctlr(fip)->realdev;
 	}
 	fcoe_port_send(lport_priv(fip->lp), skb);
 }
-- 
1.8.5.6

