From 43b98f5e9daa189a00913d254fdba4fab00b44b5 Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Fri, 31 Mar 2017 13:53:22 +0200
Subject: [PATCH 023/174] kvm: make KVM_CAP_COALESCED_MMIO architecture
 agnostic
Mime-version: 1.0
Content-type: text/plain; charset=UTF-8
Content-transfer-encoding: 8bit
Git-commit: 3042255899540d4985a616017af9e2b80a84a8cf
Patch-mainline: v4.12-rc1
References: bsc#1031492

Remove code from architecture files that can be moved to virt/kvm, since there
is already common code for coalesced MMIO.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
Reviewed-by: David Hildenbrand <david@redhat.com>
[Removed a pointless 'break' after 'return'.]
Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

Signed-off-by: Alexander Graf <agraf@suse.de>

Conflicts: arch/mips/kvm/mips.c

---
 arch/arm/kvm/arm.c         |    3 ---
 arch/mips/kvm/mips.c       |    3 ---
 arch/powerpc/kvm/powerpc.c |    5 -----
 arch/x86/kvm/x86.c         |    3 ---
 virt/kvm/kvm_main.c        |    4 ++++
 5 files changed, 4 insertions(+), 14 deletions(-)

--- a/arch/arm/kvm/arm.c
+++ b/arch/arm/kvm/arm.c
@@ -208,9 +208,6 @@ int kvm_vm_ioctl_check_extension(struct
 	case KVM_CAP_MP_STATE:
 		r = 1;
 		break;
-	case KVM_CAP_COALESCED_MMIO:
-		r = KVM_COALESCED_MMIO_PAGE_OFFSET;
-		break;
 	case KVM_CAP_ARM_SET_DEVICE_ADDR:
 		r = 1;
 		break;
--- a/arch/mips/kvm/mips.c
+++ b/arch/mips/kvm/mips.c
@@ -1094,9 +1094,6 @@ int kvm_vm_ioctl_check_extension(struct
 	case KVM_CAP_ENABLE_CAP:
 		r = 1;
 		break;
-	case KVM_CAP_COALESCED_MMIO:
-		r = KVM_COALESCED_MMIO_PAGE_OFFSET;
-		break;
 	case KVM_CAP_MIPS_FPU:
 		r = !!cpu_has_fpu;
 		break;
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@ -506,11 +506,6 @@ int kvm_vm_ioctl_check_extension(struct
 		/* We support this only for PR */
 		r = !hv_enabled;
 		break;
-#ifdef CONFIG_KVM_MMIO
-	case KVM_CAP_COALESCED_MMIO:
-		r = KVM_COALESCED_MMIO_PAGE_OFFSET;
-		break;
-#endif
 #ifdef CONFIG_KVM_MPIC
 	case KVM_CAP_IRQ_MPIC:
 		r = 1;
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -2601,9 +2601,6 @@ int kvm_vm_ioctl_check_extension(struct
 		 */
 		r = kvm_x86_ops->has_emulated_msr(MSR_IA32_SMBASE);
 		break;
-	case KVM_CAP_COALESCED_MMIO:
-		r = KVM_COALESCED_MMIO_PAGE_OFFSET;
-		break;
 	case KVM_CAP_VAPIC:
 		r = !kvm_x86_ops->cpu_has_accelerated_tpr();
 		break;
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -2812,6 +2812,10 @@ static long kvm_vm_ioctl_check_extension
 	case KVM_CAP_IOEVENTFD_ANY_LENGTH:
 	case KVM_CAP_CHECK_EXTENSION_VM:
 		return 1;
+#ifdef KVM_COALESCED_MMIO_PAGE_OFFSET
+	case KVM_CAP_COALESCED_MMIO:
+		return KVM_COALESCED_MMIO_PAGE_OFFSET;
+#endif
 #ifdef CONFIG_HAVE_KVM_IRQ_ROUTING
 	case KVM_CAP_IRQ_ROUTING:
 		return KVM_MAX_IRQ_ROUTES;
