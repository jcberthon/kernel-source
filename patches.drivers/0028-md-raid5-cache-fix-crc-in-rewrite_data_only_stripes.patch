From 5c88f403a5d2bd75911c6faaacc9bea97ac7d121 Mon Sep 17 00:00:00 2001
From: Song Liu <songliubraving@fb.com>
Date: Wed, 7 Dec 2016 09:42:05 -0800
Subject: [PATCH] md/raid5-cache: fix crc in rewrite_data_only_stripes()
Git-commit: 5c88f403a5d2bd75911c6faaacc9bea97ac7d121
Patch-mainline: v4.10-rc1
References: FATE#321488

r5l_recovery_create_empty_meta_block() creates crc for the empty
metablock. After the metablock is updated, we need clear the
checksum before recalculate it.

Shaohua: moved checksum calculation out of
r5l_recovery_create_empty_meta_block. We should calculate it after all fields
are updated.

Signed-off-by: Song Liu <songliubraving@fb.com>
Signed-off-by: Shaohua Li <shli@fb.com>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/raid5-cache.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@ -1523,7 +1523,6 @@ r5l_recovery_create_empty_meta_block(str
 				     sector_t pos, u64 seq)
 {
 	struct r5l_meta_block *mb;
-	u32 crc;
 
 	mb = page_address(page);
 	clear_page(mb);
@@ -1532,19 +1531,21 @@ r5l_recovery_create_empty_meta_block(str
 	mb->meta_size = cpu_to_le32(sizeof(struct r5l_meta_block));
 	mb->seq = cpu_to_le64(seq);
 	mb->position = cpu_to_le64(pos);
-	crc = crc32c_le(log->uuid_checksum, mb, PAGE_SIZE);
-	mb->checksum = cpu_to_le32(crc);
 }
 
 static int r5l_log_write_empty_meta_block(struct r5l_log *log, sector_t pos,
 					  u64 seq)
 {
 	struct page *page;
+	struct r5l_meta_block *mb;
 
 	page = alloc_page(GFP_KERNEL);
 	if (!page)
 		return -ENOMEM;
 	r5l_recovery_create_empty_meta_block(log, page, pos, seq);
+	mb = page_address(page);
+	mb->checksum = cpu_to_le32(crc32c_le(log->uuid_checksum,
+					     mb, PAGE_SIZE));
 	if (!sync_page_io(log->rdev, pos, PAGE_SIZE, page, REQ_OP_WRITE,
 			  REQ_FUA, false)) {
 		__free_page(page);
@@ -2118,7 +2119,8 @@ r5c_recovery_rewrite_data_only_stripes(s
 			}
 		}
 		mb->meta_size = cpu_to_le32(offset);
-		mb->checksum = crc32c_le(log->uuid_checksum, mb, PAGE_SIZE);
+		mb->checksum = cpu_to_le32(crc32c_le(log->uuid_checksum,
+						     mb, PAGE_SIZE));
 		sync_page_io(log->rdev, ctx->pos, PAGE_SIZE, page,
 			     REQ_OP_WRITE, REQ_FUA, false);
 		sh->log_start = ctx->pos;
