From: Stephen Boyd <sboyd@codeaurora.org>
Date: Fri, 5 Feb 2016 16:40:47 -0800
Subject: clkdev: Remove clk_register_clkdevs()
Git-commit: a14b9e0512404ed7d4415b888dc9f1f9785a4fa3
Patch-mainline: v4.7-rc1
References: fate#319899 fate#320700

Now that we've converted the only caller over to another clkdev
API, remove this one.

Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Cc: Russell King <linux@arm.linux.org.uk>
Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---
 drivers/clk/clkdev.c   |   27 ---------------------------
 include/linux/clkdev.h |    1 -
 2 files changed, 28 deletions(-)

--- a/drivers/clk/clkdev.c
+++ b/drivers/clk/clkdev.c
@@ -383,30 +383,3 @@ int clk_register_clkdev(struct clk *clk,
 	return cl ? 0 : -ENOMEM;
 }
 EXPORT_SYMBOL(clk_register_clkdev);
-
-/**
- * clk_register_clkdevs - register a set of clk_lookup for a struct clk
- * @clk: struct clk to associate with all clk_lookups
- * @cl: array of clk_lookup structures with con_id and dev_id pre-initialized
- * @num: number of clk_lookup structures to register
- *
- * To make things easier for mass registration, we detect error clks
- * from a previous clk_register() call, and return the error code for
- * those.  This is to permit this function to be called immediately
- * after clk_register().
- */
-int clk_register_clkdevs(struct clk *clk, struct clk_lookup *cl, size_t num)
-{
-	unsigned i;
-
-	if (IS_ERR(clk))
-		return PTR_ERR(clk);
-
-	for (i = 0; i < num; i++, cl++) {
-		cl->clk_hw = __clk_get_hw(clk);
-		__clkdev_add(cl);
-	}
-
-	return 0;
-}
-EXPORT_SYMBOL(clk_register_clkdevs);
--- a/include/linux/clkdev.h
+++ b/include/linux/clkdev.h
@@ -46,7 +46,6 @@ int clk_add_alias(const char *, const ch
 int clk_add_alias(const char *, const char *, const char *, struct device *);
 
 int clk_register_clkdev(struct clk *, const char *, const char *);
-int clk_register_clkdevs(struct clk *, struct clk_lookup *, size_t);
 
 #ifdef CONFIG_COMMON_CLK
 int __clk_get(struct clk *clk);
