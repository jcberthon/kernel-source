From: Alan Stern <stern@rowland.harvard.edu>
Date: Thu, 4 Dec 2014 10:21:56 -0500
Subject: USB: EHCI: fix initialization bug in iso_stream_schedule()
Git-commit: 6d89252a998a695ecb0348fc2d717dc33d90cae9
Patch-mainline: v3.19-rc5
References: bsc#1117515

Commit c3ee9b76aa93 (EHCI: improved logic for isochronous scheduling)
introduced the idea of using ehci->last_iso_frame as the origin (or
base) for the circular calculations involved in modifying the
isochronous schedule.  However, the new code it added used
ehci->last_iso_frame before the value was properly initialized.  This
patch rectifies the mistake by moving the initialization lines earlier
in iso_stream_schedule().

This fixes Bugzilla #72891.

Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
Fixes: c3ee9b76aa93
Reported-by: Joe Bryant <tenminjoe@yahoo.com>
Tested-by: Joe Bryant <tenminjoe@yahoo.com>
Tested-by: Martin Long <martin@longhome.co.uk>
CC: <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Acked-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
 drivers/usb/host/ehci-sched.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

--- a/drivers/usb/host/ehci-sched.c
+++ b/drivers/usb/host/ehci-sched.c
@@ -1402,6 +1402,10 @@ iso_stream_schedule (
 		else
 			next = now;
 
+		/* If needed, initialize last_iso_frame so that this URB will be seen */
+		if (ehci->isoc_count == 0)
+			ehci->last_iso_frame = now >> 3;
+
 		/*
 		 * Use ehci->last_iso_frame as the base.  There can't be any
 		 * TDs scheduled for earlier than that.
@@ -1484,9 +1488,6 @@ iso_stream_schedule (
 	if (!stream->highspeed)
 		urb->start_frame >>= 3;
 
-	/* Make sure scan_isoc() sees these */
-	if (ehci->isoc_count == 0)
-		ehci->last_iso_frame = now >> 3;
 	return 0;
 
  fail:
