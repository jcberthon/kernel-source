From 6d522ef7a81d6c474ad27c55a5c27c605128eb90 Mon Sep 17 00:00:00 2001
From: David Disseldorp <ddiss@suse.de>
Date: Fri, 21 Aug 2015 18:07:32 +0200
Subject: [PATCH] rbd: add rbd_dev_setxattr() helper
Patch-mainline: Not yet, SES2 clustered LIO/RBD
References: fate#318836

To be used for persistent reservation state storage in future.

Signed-off-by: David Disseldorp <ddiss@suse.de>
[jeffm: folded in patches.suse/rbd-do-away-with-obj_request-in-setxattr.patch
 for sorted series]
---
 drivers/block/rbd.c         |   39 +++++++++++++++++++++++++++++++++++++++
 include/linux/ceph/librbd.h |    2 ++
 2 files changed, 41 insertions(+)

--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -1842,6 +1842,9 @@ static void rbd_osd_req_callback(struct
 	case CEPH_OSD_OP_CALL:
 		rbd_osd_call_callback(obj_request);
 		break;
+	case CEPH_OSD_OP_SETXATTR:
+		obj_request_done_set(obj_request);
+		break;
 	default:
 		rbd_warn(NULL, "%s: unsupported op %hu",
 			obj_request->object_name, (unsigned short) opcode);
@@ -3931,6 +3934,42 @@ static ssize_t rbd_image_refresh(struct
 	return size;
 }
 
+int rbd_dev_setxattr(struct rbd_device *rbd_dev, char *key, void *val,
+		     int val_len)
+{
+	struct ceph_osd_client *osdc = &rbd_dev->rbd_client->client->osdc;
+	struct ceph_osd_request *req;
+	int ret;
+
+	req = ceph_osdc_alloc_request(osdc, NULL, 1, false, GFP_KERNEL);
+	if (!req)
+		return -ENOMEM;
+
+	ceph_oid_copy(&req->r_base_oid, &rbd_dev->header_oid);
+	ceph_oloc_copy(&req->r_base_oloc, &rbd_dev->header_oloc);
+	req->r_flags = CEPH_OSD_FLAG_WRITE | CEPH_OSD_FLAG_ONDISK;
+
+	ret = ceph_osdc_alloc_messages(req, GFP_KERNEL);
+	if (ret)
+		goto out;
+
+	ret = osd_req_op_xattr_init(req, 0, CEPH_OSD_OP_SETXATTR,
+				    key, val, val_len, 0, 0);
+	if (ret)
+		goto out;
+
+	ceph_osdc_start_request(osdc, req, false);
+	ret = ceph_osdc_wait_request(osdc, req);
+	if (ret < 0)
+		goto out;
+
+	ret = 0;
+out:
+	ceph_osdc_put_request(req);
+	return ret;
+}
+EXPORT_SYMBOL(rbd_dev_setxattr);
+
 static DEVICE_ATTR(size, S_IRUGO, rbd_size_show, NULL);
 static DEVICE_ATTR(features, S_IRUGO, rbd_features_show, NULL);
 static DEVICE_ATTR(major, S_IRUGO, rbd_major_show, NULL);
--- a/include/linux/ceph/librbd.h
+++ b/include/linux/ceph/librbd.h
@@ -172,5 +172,7 @@ extern int rbd_img_request_fill(struct r
 				enum obj_request_type type, void *data_desc);
 extern int rbd_img_request_submit(struct rbd_img_request *img_request);
 extern void rbd_img_request_put(struct rbd_img_request *img_request);
+extern int rbd_dev_setxattr(struct rbd_device *rbd_dev, char *key, void *val,
+			    int val_len);
 
 #endif
