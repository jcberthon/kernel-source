From fd4b1bfc8286025c6d392e9ef787f3bb55f664af Mon Sep 17 00:00:00 2001
From: David Disseldorp <ddiss@suse.de>
Date: Sat, 22 Aug 2015 15:26:22 +0200
Subject: [PATCH] rbd: add rbd_dev_cmpsetxattr helper
Patch-mainline: Not yet, SES2 clustered LIO/RBD
References: fate#318836

Allows for the atomic update of an xattr, by comparing against an
existing string, and writing the new value only if the old value is
matching.

Signed-off-by: David Disseldorp <ddiss@suse.de>
[jeffm: folded in patches.suse/rbd-do-away-with-obj_request-in-cmpsetxattr.patch
 for sorted series]
---
 drivers/block/rbd.c         |   46 ++++++++++++++++++++++++++++++++++++++++++++
 include/linux/ceph/librbd.h |    3 ++
 2 files changed, 49 insertions(+)

--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -1845,6 +1845,7 @@ static void rbd_osd_req_callback(struct
 		rbd_osd_call_callback(obj_request);
 		break;
 	case CEPH_OSD_OP_SETXATTR:
+	case CEPH_OSD_OP_CMPXATTR:
 		obj_request_done_set(obj_request);
 		break;
 	default:
@@ -3972,6 +3973,51 @@ out:
 }
 EXPORT_SYMBOL(rbd_dev_setxattr);
 
+int rbd_dev_cmpsetxattr(struct rbd_device *rbd_dev, char *key, void *oldval,
+			int oldval_len, void *newval, int newval_len)
+{
+	struct ceph_osd_client *osdc = &rbd_dev->rbd_client->client->osdc;
+	struct ceph_osd_request *req;
+	int ret;
+
+	req = ceph_osdc_alloc_request(osdc, NULL, 2, false, GFP_KERNEL);
+	if (!req)
+		return -ENOMEM;
+
+	ceph_oid_copy(&req->r_base_oid, &rbd_dev->header_oid);
+	ceph_oloc_copy(&req->r_base_oloc, &rbd_dev->header_oloc);
+	req->r_flags = CEPH_OSD_FLAG_WRITE | CEPH_OSD_FLAG_ONDISK;
+
+	ret = ceph_osdc_alloc_messages(req, GFP_KERNEL);
+	if (ret)
+		goto out;
+
+	ret = osd_req_op_xattr_init(req, 0,
+				    CEPH_OSD_OP_CMPXATTR,
+				    key, oldval, oldval_len,
+				    CEPH_OSD_CMPXATTR_OP_EQ,
+				    CEPH_OSD_CMPXATTR_MODE_STRING);
+	if (ret)
+		goto out;
+
+	ret = osd_req_op_xattr_init(req, 1,
+				    CEPH_OSD_OP_SETXATTR,
+				    key, newval, newval_len, 0, 0);
+	if (ret)
+		goto out;
+
+	ceph_osdc_start_request(osdc, req, false);
+	ret = ceph_osdc_wait_request(osdc, req);
+	if (ret < 0)
+		goto out;
+
+	ret = 0;
+out:
+	ceph_osdc_put_request(req);
+	return ret;
+}
+EXPORT_SYMBOL(rbd_dev_cmpsetxattr);
+
 /*
  * TODO: remove me or move to debugfs for final merge.
  */
--- a/include/linux/ceph/librbd.h
+++ b/include/linux/ceph/librbd.h
@@ -174,5 +174,8 @@ extern int rbd_img_request_submit(struct
 extern void rbd_img_request_put(struct rbd_img_request *img_request);
 extern int rbd_dev_setxattr(struct rbd_device *rbd_dev, char *key, void *val,
 			    int val_len);
+extern int rbd_dev_cmpsetxattr(struct rbd_device *rbd_dev, char *key,
+			       void *oldval, int oldval_len, void *newval,
+			       int newval_len);
 
 #endif
