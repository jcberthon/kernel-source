From: NeilBrown <neilb@suse.com>
Subject: Fix kabi break caused by NFS: Cache state owners after files are closed
Patch-mainline: Never, kabi
References: bsc#1031572

These structure are never allocated by modules, and the fields are for
internal use, so move them to the end of the struct, and hide them.

Acked-by: NeilBrown <neilb@suse.com>
Signed-off-by: Neil Brown <neilb@suse.com>

---
 fs/nfs/nfs4_fs.h          |    6 ++++--
 include/linux/nfs_fs_sb.h |    4 +++-
 2 files changed, 7 insertions(+), 3 deletions(-)

--- a/fs/nfs/nfs4_fs.h
+++ b/fs/nfs/nfs4_fs.h
@@ -117,8 +117,6 @@ struct nfs_unique_id {
 struct nfs4_state_owner {
 	struct nfs_unique_id so_owner_id;
 	struct nfs_server    *so_server;
-	struct list_head     so_lru;
-	unsigned long        so_expires;
 	struct rb_node	     so_server_node;
 
 	struct rpc_cred	     *so_cred;	 /* Associated cred */
@@ -131,6 +129,10 @@ struct nfs4_state_owner {
 	struct rpc_sequence  so_sequence;
 	seqcount_t	     so_reclaim_seqcount;
 	struct mutex	     so_delegreturn_mutex;
+#ifndef __GENKSYMS__
+	struct list_head     so_lru;
+	unsigned long        so_expires;
+#endif
 };
 
 enum {
--- a/include/linux/nfs_fs_sb.h
+++ b/include/linux/nfs_fs_sb.h
@@ -150,7 +150,6 @@ struct nfs_server {
 	struct rb_root		openowner_id;
 	struct rb_root		lockowner_id;
 #endif
-	struct list_head	state_owners_lru;
 	struct list_head	delegations;
 	void (*destroy)(struct nfs_server *);
 
@@ -162,6 +161,9 @@ struct nfs_server {
 	u32			mountd_version;
 	unsigned short		mountd_port;
 	unsigned short		mountd_protocol;
+#ifndef __GENKSYMS__
+	struct list_head	state_owners_lru;
+#endif
 };
 
 /* Server capabilities */
