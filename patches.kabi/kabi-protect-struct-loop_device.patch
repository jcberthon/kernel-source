From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct loop_device
Patch-mainline: never, kabi
References: kabi

In 4.4.141, commit 43991e916eb9eac9ea0ef0317f9bfd3c491972cb (loop:
remember whether sysfs_create_group() was done), upstream commit
d3349b6b3c373ac1fbfb040b810fcee5e2adc7e0 added one bool to struct
loop_device.

In 4.4.172, commit b3f3107fbd928fed6e4fecbe3da2ed5f43216439
(block/loop: Use global lock for ioctl() operation.), upstream commit
310ca162d779efee8a2dc3731439680f3e9c1e86 removed lo_ctl_mutex from
struct loop_device.

Both made the kABI checker to complain.

Given this is only loop device internal header, just hide the change
from the kABI checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/block/loop.h |    5 +++++
 1 file changed, 5 insertions(+)

--- a/drivers/block/loop.h
+++ b/drivers/block/loop.h
@@ -56,10 +56,15 @@ struct loop_device {
 
 	spinlock_t		lo_lock;
 	int			lo_state;
+#ifdef __GENKSYMS__
+	struct mutex		lo_ctl_mutex;
+#endif
 	struct kthread_worker	worker;
 	struct task_struct	*worker_task;
 	bool			use_dio;
+#ifndef __GENKSYMS__
 	bool			sysfs_inited;
+#endif
 
 	struct request_queue	*lo_queue;
 	struct blk_mq_tag_set	tag_set;
