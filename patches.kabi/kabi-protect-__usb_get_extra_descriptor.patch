From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect __usb_get_extra_descriptor
Patch-mainline: never, kabi
References: kabi

In 4.4.167, commit c380600bf71c35dc23aa0c3628a1013ec10cb349 (USB:
check usb_get_extra_descriptor for proper size), upstream commit
704620afc70cf47abb9d6a1a57f3825d2bca49cf added a parameter to
__usb_get_extra_descriptor. It made the kABI checker to complain.

Rename the new function to __usb_get_extra_descriptor5 and
re-introduce the old __usb_get_extra_descriptor with 4 parameters.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/usb/core/hub.c    |    2 +-
 drivers/usb/core/usb.c    |   11 +++++++++--
 drivers/usb/host/hwa-hc.c |    2 +-
 include/linux/usb.h       |    4 ++--
 4 files changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -2225,7 +2225,7 @@ static int usb_enumerate_device_otg(stru
 		unsigned			port1 = udev->portnum;
 
 		/* descriptor may appear anywhere in config */
-		err = __usb_get_extra_descriptor(udev->rawdescriptors[0],
+		err = __usb_get_extra_descriptor5(udev->rawdescriptors[0],
 				le16_to_cpu(udev->config[0].desc.wTotalLength),
 				USB_DT_OTG, (void **) &desc, sizeof(*desc));
 		if (err || !(desc->bmAttributes & USB_OTG_HNP))
--- a/drivers/usb/core/usb.c
+++ b/drivers/usb/core/usb.c
@@ -686,11 +686,11 @@ EXPORT_SYMBOL_GPL(usb_get_current_frame_
 
 /*-------------------------------------------------------------------*/
 /*
- * __usb_get_extra_descriptor() finds a descriptor of specific type in the
+ * __usb_get_extra_descriptor5() finds a descriptor of specific type in the
  * extra field of the interface and endpoint descriptor structs.
  */
 
-int __usb_get_extra_descriptor(char *buffer, unsigned size,
+int __usb_get_extra_descriptor5(char *buffer, unsigned size,
 			       unsigned char type, void **ptr, size_t minsize)
 {
 	struct usb_descriptor_header *header;
@@ -717,6 +717,13 @@ int __usb_get_extra_descriptor(char *buf
 	}
 	return -1;
 }
+EXPORT_SYMBOL_GPL(__usb_get_extra_descriptor5);
+
+int __usb_get_extra_descriptor(char *buffer, unsigned size,
+                               unsigned char type, void **ptr)
+{
+	return __usb_get_extra_descriptor5(buffer, size, type, ptr, 0);
+}
 EXPORT_SYMBOL_GPL(__usb_get_extra_descriptor);
 
 /**
--- a/drivers/usb/host/hwa-hc.c
+++ b/drivers/usb/host/hwa-hc.c
@@ -652,7 +652,7 @@ static int hwahc_security_create(struct
 	itr = usb_dev->rawdescriptors[index];
 	itr_size = le16_to_cpu(usb_dev->actconfig->desc.wTotalLength);
 	top = itr + itr_size;
-	result = __usb_get_extra_descriptor(usb_dev->rawdescriptors[index],
+	result = __usb_get_extra_descriptor5(usb_dev->rawdescriptors[index],
 			le16_to_cpu(usb_dev->actconfig->desc.wTotalLength),
 			USB_DT_SECURITY, (void **) &secd, sizeof(*secd));
 	if (result == -1) {
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -336,10 +336,10 @@ struct usb_host_bos {
 	void *suse_kabi_padding;
 };
 
-int __usb_get_extra_descriptor(char *buffer, unsigned size,
+int __usb_get_extra_descriptor5(char *buffer, unsigned size,
 	unsigned char type, void **ptr, size_t min);
 #define usb_get_extra_descriptor(ifpoint, type, ptr) \
-				__usb_get_extra_descriptor((ifpoint)->extra, \
+				__usb_get_extra_descriptor5((ifpoint)->extra, \
 				(ifpoint)->extralen, \
 				type, (void **)ptr, sizeof(**(ptr)))
 
