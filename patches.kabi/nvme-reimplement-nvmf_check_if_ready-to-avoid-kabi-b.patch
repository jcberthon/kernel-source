From: Hannes Reinecke <hare@suse.de>
Date: Fri, 29 Jun 2018 11:43:48 +0200
Subject: [PATCH] nvme: reimplement nvmf_check_if_ready() to avoid kabi
 breakage
Patch-Mainline: no, kABI fix for SLE12-SP3
References: bsc#1098527

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 drivers/nvme/host/fabrics.c | 13 +++++++++++++
 drivers/nvme/host/fabrics.h |  2 ++
 2 files changed, 15 insertions(+)

diff --git a/drivers/nvme/host/fabrics.c b/drivers/nvme/host/fabrics.c
index 3422687a0c31..a35b36291dbb 100644
--- a/drivers/nvme/host/fabrics.c
+++ b/drivers/nvme/host/fabrics.c
@@ -584,6 +584,19 @@ bool __nvmf_check_ready(struct nvme_ctrl *ctrl, struct request *rq,
 }
 EXPORT_SYMBOL_GPL(__nvmf_check_ready);
 
+int nvmf_check_if_ready(struct nvme_ctrl *ctrl,
+	struct request *rq, bool queue_live, bool is_connected)
+{
+	if (!is_connected)
+		return BLK_MQ_RQ_QUEUE_BUSY;
+	if (!nvmf_check_ready(ctrl, rq, queue_live)) {
+		nvme_req(rq)->status = NVME_SC_ABORT_REQ;
+		return BLK_MQ_RQ_QUEUE_ERROR;
+	}
+	return 0;
+}
+EXPORT_SYMBOL_GPL(nvmf_check_if_ready);
+
 static const match_table_t opt_tokens = {
 	{ NVMF_OPT_TRANSPORT,		"transport=%s"		},
 	{ NVMF_OPT_TRADDR,		"traddr=%s"		},
diff --git a/drivers/nvme/host/fabrics.h b/drivers/nvme/host/fabrics.h
index 71c494bbaea2..6e98ecd312d3 100644
--- a/drivers/nvme/host/fabrics.h
+++ b/drivers/nvme/host/fabrics.h
@@ -162,6 +162,8 @@ void nvmf_free_options(struct nvmf_ctrl_options *opts);
 const char *nvmf_get_subsysnqn(struct nvme_ctrl *ctrl);
 int nvmf_get_address(struct nvme_ctrl *ctrl, char *buf, int size);
 bool nvmf_should_reconnect(struct nvme_ctrl *ctrl);
+int nvmf_check_if_ready(struct nvme_ctrl *ctrl,
+		struct request *rq, bool queue_live, bool is_connected);
 int nvmf_fail_nonready_command(struct nvme_ctrl *ctrl,
 		struct request *rq);
 bool __nvmf_check_ready(struct nvme_ctrl *ctrl, struct request *rq,
-- 
2.12.3

