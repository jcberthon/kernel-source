From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: reintroduce __static_cpu_has_safe
Patch-mainline: never, kabi
References: kabi

In 4.4.141, commit 2d45dae0af88a2602e37e596fdc69f66497f3bb0
(x86/cpufeature: Replace the old static_cpu_has() with safe variant),
upstream commit bc696ca05f5a8927329ec276a892341e006b00ba
renamed __static_cpu_has_safe to __static_cpu_has. And even that was
removed later in e23a6fee6767 (2476f2fa2056).

Reintroduce the function in case somebody else uses that.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/cpufeature.h |    2 ++
 arch/x86/kernel/cpu/common.c      |    6 ++++++
 2 files changed, 8 insertions(+)

--- a/arch/x86/include/asm/cpufeature.h
+++ b/arch/x86/include/asm/cpufeature.h
@@ -162,6 +162,8 @@ extern const char * const x86_bug_flags[
  * fast paths and boot_cpu_has() otherwise!
  */
 
+extern bool __static_cpu_has_safe(u16 bit);
+
 #if defined(CC_HAVE_ASM_GOTO) && defined(CONFIG_X86_FAST_FEATURE_TESTS)
 /*
  * Static testing of CPU features.  Used the same as boot_cpu_has().
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -1581,3 +1581,9 @@ void cpu_init(void)
 	fpu__init_cpu();
 }
 #endif
+
+inline bool __static_cpu_has_safe(u16 bit)
+{
+	return boot_cpu_has(bit);
+}
+EXPORT_SYMBOL_GPL(__static_cpu_has_safe);
