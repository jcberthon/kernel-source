From: Jan Kara <jack@suse.cz>
Date: Thu, 26 May 2016 16:10:38 +0200
Subject: ceph: Propagate dentry down to inode_change_ok()
Git-commit: fd5472ed44683cf593322a2ef54b9a7675dc780a
Patch-mainline: v4.9-rc1
References: FATE#322288

To avoid clearing of capabilities or security related extended
attributes too early, inode_change_ok() will need to take dentry instead
of inode. ceph_setattr() has the dentry easily available but
__ceph_setattr() is also called from ceph_set_acl() where dentry is not
easily available. Luckily that call path does not need inode_change_ok()
to be called anyway. So reorganize functions a bit so that
inode_change_ok() is called only from paths where dentry is available.

Reviewed-by: Christoph Hellwig <hch@lst.de>
Acked-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Jan Kara <jack@suse.cz>
Acked-by: Luis Henriques <lhenriques@suse.com>
[luis: because commit 31051c85b5e2 ("fs: Give dentry to inode_change_ok()
 instead of inode") had already been applied, this patch is needed and
 required some context adjustment]
---
 fs/ceph/acl.c   |    5 +++++
 fs/ceph/inode.c |   17 +++++++++--------
 2 files changed, 14 insertions(+), 8 deletions(-)

--- a/fs/ceph/acl.c
+++ b/fs/ceph/acl.c
@@ -123,6 +123,11 @@ int ceph_set_acl(struct inode *inode, st
 			goto out_free;
 	}
 
+	if (ceph_snap(inode) != CEPH_NOSNAP) {
+		ret = -EROFS;
+		goto out_free;
+	}
+
 	if (new_mode != old_mode) {
 		newattrs.ia_mode = new_mode;
 		newattrs.ia_valid = ATTR_MODE;
--- a/fs/ceph/inode.c
+++ b/fs/ceph/inode.c
@@ -1799,13 +1799,6 @@ int __ceph_setattr(struct inode *inode,
 	int inode_dirty_flags = 0;
 	bool lock_snap_rwsem = false;
 
-	if (ceph_snap(inode) != CEPH_NOSNAP)
-		return -EROFS;
-
-	err = setattr_prepare(dentry, attr);
-	if (err != 0)
-		return err;
-
 	prealloc_cf = ceph_alloc_cap_flush();
 	if (!prealloc_cf)
 		return -ENOMEM;
@@ -2008,9 +2001,17 @@ int __ceph_setattr(struct inode *inode,
 
 int ceph_setattr(struct dentry *dentry, struct iattr *attr)
 {
+	struct inode *inode = d_inode(dentry);
 	int err;
 
-	err = __ceph_setattr(d_inode(dentry), attr);
+	if (ceph_snap(inode) != CEPH_NOSNAP)
+		return -EROFS;
+
+	err = setattr_prepare(dentry, attr);
+	if (err != 0)
+		return err;
+
+	err = __ceph_setattr(inode, attr);
 
 	if (err >= 0 && (attr->ia_valid & ATTR_MODE))
 		err = posix_acl_chmod(d_inode(dentry), attr->ia_mode);
