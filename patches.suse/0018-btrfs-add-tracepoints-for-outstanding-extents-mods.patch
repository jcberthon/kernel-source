From dd48d4072e0cdac51edcbff66342fe2f21b5b588 Mon Sep 17 00:00:00 2001
From: Josef Bacik <josef@toxicpanda.com>
Date: Thu, 19 Oct 2017 14:15:56 -0400
Patch-mainline: v4.15
Git-commit: dd48d4072e0cdac51edcbff66342fe2f21b5b588
References: dependency for bsc#1031392
Subject: [PATCH 18/24] btrfs: add tracepoints for outstanding extents mods

This is handy for tracing problems with modifying the outstanding
extents counters.

Signed-off-by: Josef Bacik <jbacik@fb.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Qu Wenruo <wqu@suse.com>
---
 fs/btrfs/btrfs_inode.h       |    3 +++
 include/trace/events/btrfs.h |   21 +++++++++++++++++++++
 2 files changed, 24 insertions(+)

--- a/fs/btrfs/btrfs_inode.h
+++ b/fs/btrfs/btrfs_inode.h
@@ -270,6 +270,9 @@ static inline void btrfs_mod_reserved_ex
 	inode->reserved_extents += mod;
 	if (btrfs_is_free_space_inode(&inode->vfs_inode))
 		return;
+	trace_btrfs_inode_mod_outstanding_extents(inode->root,
+						  btrfs_ino(&inode->vfs_inode),
+						  mod);
 }
 
 static inline int btrfs_inode_in_log(struct inode *inode, u64 generation)
--- a/include/trace/events/btrfs.h
+++ b/include/trace/events/btrfs.h
@@ -1595,6 +1595,27 @@ TRACE_EVENT(qgroup_meta_reserve,
 	TP_ARGS(fs_info, oldref, newref, tree_size)
 );
 
+TRACE_EVENT(btrfs_inode_mod_outstanding_extents,
+	TP_PROTO(struct btrfs_root *root, u64 ino, int mod),
+
+	TP_ARGS(root, ino, mod),
+
+	TP_STRUCT__entry_btrfs(
+		__field(	u64, root_objectid	)
+		__field(	u64, ino		)
+		__field(	int, mod		)
+	),
+
+	TP_fast_assign_btrfs(root->fs_info,
+		__entry->root_objectid	= root->objectid;
+		__entry->ino		= ino;
+		__entry->mod		= mod;
+	),
+
+	TP_printk_btrfs("root=%llu(%s) ino=%llu mod=%d",
+			show_root_type(__entry->root_objectid),
+			(unsigned long long)__entry->ino, __entry->mod)
+);
 #endif /* _TRACE_BTRFS_H */
 
 /* This part must be outside protection */
