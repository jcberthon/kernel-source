From: Joerg Roedel <jroedel@suse.de>
Date: Mon, 11 Jun 2018 16:02:47 +0200
Subject: KVM: x86: Sync back MSR_IA32_SPEC_CTRL to VCPU data structure
Git-commit: b2ac58f90540e39324e7a29a7ad471407ae0bf48
Git-commit: d28b387fb74da95d69d2615732f50cceb38e9a4d
Patch-mainline: v4.16-rc1
References: bsc#1096242, bsc#1096281

[note: upstream has a different implementation but we use the Git-commit tag
 here to have it land in the right spot in the sorted series -jeffm]

Sync MSR_IA32_SPEC_CTRL to vcpu->spec_ctrl to make sure the values are never
going to be out-of-sync.

Signed-off-by: Joerg Roedel <jroedel@suse.de>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/kvm/svm.c |    3 +++
 arch/x86/kvm/vmx.c |    5 +++++
 2 files changed, 8 insertions(+)

--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -4901,6 +4901,9 @@ static void svm_vcpu_run(struct kvm_vcpu
 #endif
 #endif
 
+	if (boot_cpu_has(X86_FEATURE_MSR_SPEC_CTRL))
+		svm->spec_ctrl = native_read_msr(MSR_IA32_SPEC_CTRL);
+
 	reload_tss(vcpu);
 
 	local_irq_disable();
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -618,6 +618,8 @@ struct vcpu_vmx {
 	 */
 	u64 msr_ia32_feature_control;
 	u64 msr_ia32_feature_control_valid_bits;
+
+	u64 spec_ctrl;
 };
 
 enum segment_cache_field {
@@ -8708,6 +8710,9 @@ static void __noclone vmx_vcpu_run(struc
 #endif
 	      );
 
+	if (boot_cpu_has(X86_FEATURE_MSR_SPEC_CTRL))
+		vmx->spec_ctrl = native_read_msr(MSR_IA32_SPEC_CTRL);
+
 	/* Eliminate branch target predictions from guest mode */
 	vmexit_fill_RSB();
 
